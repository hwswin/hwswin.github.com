程序优化
==========   

提供64位版本
--------------------

* 寻址能力

    * 32位寻址能力为2的32次方，即4*2^30为4GB。

        *其中系统分一半内存（系统空间）以便管理与调度系统各应用程序，还剩2GB可有程序使用（用户空间）。*

    * 64位寻址能力则为2的64次方，即16*2^60为16EB。

        *当然这个是理论值，目前Windows的实现+的物理内存是16TB左右，也就是44位。*

        *64位的地址线实际上连64根都不到，只实现了40~50根，因为足够用了，Windows x64版本限制了44位寻址，最大16TB内存，所以造成了所谓的AMD64空洞（用户空间在低位，内核空间在高位，而44位寻址不完全，中间必然有空洞）*

* .NET内存溢出

    =================   ================      ============================================================================
    处理器/系统         32位操作系统          64位操作系统
    =================   ================      ============================================================================
    32位进程            800-1200 MB           2800 MB
    与/ 3GB 32位进程    1800 MB               N / A
    64位进程            N / A                 如果使用的是4 GB的进程或更多，如果更多的内存2800 MB（约的RAM +页面文件70％）
    =================   ================      ============================================================================

* x64

    项目 - 属性 - 生成 - 目标平台 

        **选择x64**

DataSet无法及时被GC
---------------------
.. code-block:: c#

    this.cReportKEY1.EditDataSet.Merge(_ds, false, System.Data.MissingSchemaAction.AddWithKey);
    _ds = null;
    _ds.Dispose();
    GC.Collect();

在_ds.Dispose()前需要显示指定 ``_ds = null;`` 以便GC能够及时回收内存

* 容量提升
    * 与_ds填充的数据量有关，本案例中容量提升了大约30%，由17万提高到22万（黄永慎测）
    * **减少字段数**

Excel数据导出
----------------

采用QueryTable方式，直接从数据库中将数据导入到Excel中

* 一分钟可以导出约30万条数据（包含210列）（陈家昌测）

.. literalinclude:: ./exportToExcel.cs
  :language: C#
  :emphasize-lines: 21,46,58,60-61,83-85
  :linenos:
